{"version":3,"sources":["reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","actions/authActions.js","components/TopNavbar.js","components/page/Signin.js","actions/errorActions.js","components/page/SyllabusPlanning.js","components/page/Course.js","components/common/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","loading","auth","token","localStorage","getItem","isAuthenticated","isLoading","user","combineReducers","item","state","action","type","payload","filter","_id","error","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","tokenConfig","getState","config","headers","faHome","faUserTie","faChalkboardTeacher","faUserGraduate","TopNavbar","props","dispatch","useDispatch","useSelector","useHistory","React","useState","Navbar","bg","variant","expand","sticky","Brand","Fragment","Nav","className","Button","onClick","icon","faSignOutAlt","fixedWidth","Signin","history","username","setUsername","password","setPassword","useEffect","console","log","push","Object","keys","length","Container","Jumbotron","Form","noValidate","onSubmit","e","preventDefault","body","JSON","stringify","axios","post","process","then","res","data","catch","err","response","login","Group","controlId","InputGroup","Prepend","Text","faUser","Control","placeholder","value","onChange","target","isInvalid","hasOwnProperty","required","Feedback","faLock","regularCourseList","id","name","branch","tutor","periodStart","moment","periodEnd","courseStatus","totalLesson","lastLesson","reviewStatus","summerCampList","reviewCourseList","Home","toLessonPage","courseId","mode","Row","Col","Card","Body","Title","Badge","Table","striped","hover","borderless","responsive","style","width","map","i","cursor","key","format","ProgressBar","label","now","Math","round","obj","lessonId","lessonNumber","lessonName","reviewer","objectives","objectiveId","description","students","studentId","assessments","assessmentId","studentName","review","reviewerId","comment","grading","grade","remarks","obj2","Course","alist","setAlist","submitStatus","setSubmitStatus","updateAlist","lessonIdx","assessmentIdx","idx","attr","ele","lesson","Header","as","Tabs","defaultActiveKey","borderBottom","assessment","Tab","eventKey","title","Label","column","sm","initialRating","emptySymbol","faStar","color","fullSymbol","faSolidStar","rate","readOnly","includes","disabled","submitForm","connect","Component","component","rest","render","Spinner","animation","role","to","Wrapper","get","basename","fluid","path","exact","SyllabusPlanning","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c3023a67.chunk.js","sourcesContent":["import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            };\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            };\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    UPDATE_AUTH_ERRORS,\r\n    CLEAR_AUTH_ERRORS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    auth: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        // case GET_ERRORS:\r\n        //     return {\r\n        //         msg: action.payload.msg,\r\n        //         status: action.payload.status,\r\n        //         id: action.payload.id,\r\n        //     };\r\n        // case CLEAR_ERRORS:\r\n        //     return {\r\n        //         msg: {},\r\n        //         status: null,\r\n        //         id: null\r\n        //     };\r\n        case UPDATE_AUTH_ERRORS:\r\n            return {\r\n                ...state,\r\n                auth: action.payload\r\n            };\r\n        case CLEAR_AUTH_ERRORS:\r\n            return {\r\n                ...state,\r\n                auth: {},\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: true,\r\n    user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    error: errorReducer,\r\n    auth: authReducer\r\n});","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\n\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const CLEAR_AUTH_ERRORS = 'CLEAR_AUTH_ERRORS';\r\nexport const UPDATE_AUTH_ERRORS = 'UPDATE_AUTH_ERRORS';","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from 'axios';\r\nimport { clearAuthErrors, returnErrors, updateAuthErrors } from './errorActions';\r\n\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n\r\n    UPDATE_AUTH_ERRORS,\r\n    CLEAR_AUTH_ERRORS\r\n} from './types';\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/api/auth/user`, tokenConfig(getState))\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        });\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/api/users`, body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch(\r\n                returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\r\n            );\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        });\r\n};\r\n\r\n// Login User\r\nexport const login = ({ username, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/api/auth`, body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(clearAuthErrors());\r\n            dispatch(updateAuthErrors(err.response.data));\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n        });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    };\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token;\r\n    }\r\n\r\n    return config;\r\n};","import React from 'react'\r\n\r\nimport { Switch, Route, useHistory, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { logout } from \"../actions/authActions\"\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserGraduate, faChalkboardTeacher, faUserTie, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst navLinkList = [\r\n    { to: \"/\", icon: faHome, text: \"Home\" },\r\n    { to: \"/\", icon: faUserTie, text: \"Tutor\" },\r\n    { to: \"/\", icon: faChalkboardTeacher, text: \"Class\" },\r\n    { to: \"/signin\", icon: faUserGraduate, text: \"Student\" },\r\n]\r\n\r\nexport default function TopNavbar(props) {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n\r\n    const [activeNavLink, setActiveNavLink] = React.useState(0);\r\n\r\n    const signoutBtnClick = () => {\r\n        dispatch(logout());\r\n    }\r\n\r\n    return (\r\n        <Navbar\r\n            // collapseOnSelect\r\n            bg=\"dark\"\r\n            variant=\"dark\"\r\n            expand=\"lg\"\r\n            sticky=\"top\"\r\n        >\r\n            <Navbar.Brand>Home</Navbar.Brand>\r\n            {\r\n                auth.isAuthenticated === true ? (\r\n                    <React.Fragment>\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Button variant=\"outline-warning\" onClick={() => signoutBtnClick()}><FontAwesomeIcon icon={faSignOutAlt} fixedWidth />Sign Out</Button>\r\n                        </Nav>\r\n                    </React.Fragment>\r\n                ) : null}\r\n\r\n            {/* <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" /> */}\r\n            {/* <Navbar.Collapse id=\"responsive-navbar-nav\"> */}\r\n            {/* <Nav className=\"mr-auto\"> */}\r\n            {/* <Nav.Item>a</Nav.Item> */}\r\n            {/* <Nav.Item>b</Nav.Item> */}\r\n            {/* </Nav> */}\r\n            {/* <Nav activeKey={activeNavLink} onSelect={(selectedKey) => setActiveNavLink(selectedKey)}> */}\r\n            {/* <Nav.Link as={Link} to=\"/\" eventKey=\"link-home\"><FontAwesomeIcon icon={faHome} fixedWidth />Home</Nav.Link> */}\r\n            {/* <Nav.Link as={Link} to=\"/signin\" eventKey=\"link-signin\"><FontAwesomeIcon icon={faUserGraduate} fixedWidth />Student</Nav.Link> */}\r\n            {\r\n                // navLinkList.map((e, i) => (\r\n                //     <Nav.Link as={Link} to={e.to} eventKey={i}><FontAwesomeIcon icon={e.icon} fixedWidth />{' '}{e.text}</Nav.Link>\r\n                // )\r\n                // )\r\n            }\r\n            {/* </Nav> */}\r\n            {/* </Navbar.Collapse> */}\r\n        </Navbar>\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\nimport { Switch, Route, useHistory, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { login } from \"../../actions/authActions\"\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Signin(props) {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n    const error = useSelector(state => state.error);\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    // const [usernameInvalid, setUsernameInvalid] = React.useState(false);\r\n    // const [passwordInvalid, setPasswordInvalid] = React.useState(false);\r\n\r\n    const signinSubmit = e => {\r\n        e.preventDefault();\r\n        // setUsernameInvalid(false);\r\n        // setPasswordInvalid(false);\r\n        // if (username === '' || password === '') {\r\n        //     if (username === '') setUsernameInvalid(true);\r\n        //     if (password === '') setPasswordInvalid(true);\r\n        //     console.log('error');\r\n        //     return\r\n        // } else {\r\n        //     console.log('sign in');\r\n        //     dispatch(login({ username, password }));\r\n        // }\r\n        dispatch(login({ username, password }));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (auth.isAuthenticated === true) {\r\n            console.log('login success');\r\n            history.push(\"/\");\r\n        }\r\n    }, [auth])\r\n\r\n    React.useEffect(() => {\r\n        if (Object.keys(error.auth).length !== 0) {\r\n            console.log('auth error');\r\n            console.log(error.auth)\r\n        }\r\n    }, [error])\r\n\r\n    return (\r\n        <Container className=\"p-5\">\r\n            <Jumbotron>\r\n                <h1 className=\"header\">Welcome To ABC</h1>\r\n                <Form noValidate onSubmit={signinSubmit}>\r\n                    <Form.Group controlId=\"formUsername\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faUser} fixedWidth />\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                value={username}\r\n                                onChange={(e) => (setUsername(e.target.value))}\r\n                                // isInvalid={usernameInvalid}\r\n                                isInvalid={error.auth.hasOwnProperty('username')}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {\r\n                                    error.auth.hasOwnProperty('username') ? error.auth.username : ''\r\n                                }\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPassword\">\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    <FontAwesomeIcon icon={faLock} fixedWidth />\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e) => (setPassword(e.target.value))}\r\n                                // isInvalid={passwordInvalid}\r\n                                isInvalid={error.auth.hasOwnProperty('password')}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {\r\n                                    error.auth.hasOwnProperty('password') ? error.auth.password : ''\r\n                                }\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign In\r\n                    </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </Container>\r\n    );\r\n\r\n}","import { GET_ERRORS, CLEAR_ERRORS, UPDATE_AUTH_ERRORS, CLEAR_AUTH_ERRORS } from './types';\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n    };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n\r\n// UPDATE AUTH ERRORS\r\nexport const updateAuthErrors = (data) => {\r\n    return {\r\n        type: UPDATE_AUTH_ERRORS,\r\n        payload: data\r\n    };\r\n};\r\n\r\n// CLEAR AUTH ERRORS\r\nexport const clearAuthErrors = () => {\r\n    return {\r\n        type: CLEAR_AUTH_ERRORS\r\n    };\r\n};","import React from 'react'\r\n\r\nimport { Switch, Route, useHistory, Link, NavLink } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nimport { faUserTie, faGraduationCap, faChalkboardTeacher } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport axios from 'axios'\r\nimport HomeCard from '../HomeCard'\r\nimport moment from 'moment'\r\n\r\nconst regularCourseList = [\r\n    { id: 1, name: 'A Level 2', branch: 'Branch A', tutor: ['A', 'B'], periodStart: moment(\"2019-08-23\"), periodEnd: moment(\"2019-12-23\"), courseStatus: 'Completed', totalLesson: 12, lastLesson: 12, reviewStatus: 'Completed' },\r\n    { id: 3, name: 'B Level 2', branch: 'Branch A', tutor: ['A'], periodStart: moment(\"2020-04-10\"), periodEnd: null, courseStatus: 'Ongoing', totalLesson: 12, lastLesson: 7, reviewStatus: 'Ongoing' },\r\n]\r\n\r\nconst summerCampList = [\r\n    { id: 5, name: 'A Level 2 (Summer Camp)', branch: 'Branch A', tutor: ['A', 'B'], periodStart: moment(\"2019-07-14\"), periodEnd: moment(\"2019-08-29\"), courseStatus: 'Completed', totalLesson: 6, lastLesson: 6, reviewStatus: 'Completed' },\r\n    { id: 6, name: 'B Level 2 (Summer Camp)', branch: 'Branch A', tutor: ['A'], periodStart: moment(\"2020-07-10\"), periodEnd: moment(\"2020-08-29\"), courseStatus: 'Cancelled', totalLesson: 6, lastLesson: 0, reviewStatus: null },\r\n]\r\n\r\nconst makeupLessonList = [\r\n    { id: 2, name: 'C Level 1', branch: 'Branch A', tutor: ['A', 'B'], periodStart: moment(\"2020-04-10\"), periodEnd: null, courseStatus: 'Ongoing', totalLesson: 12, lastLesson: 7, reviewStatus: 'Ongoing' },\r\n]\r\n\r\nconst reviewCourseList = [\r\n    { id: 2, name: 'A Level 2', branch: 'Branch B', tutor: ['B'], periodStart: moment(\"2019-08-23\"), periodEnd: moment(\"2019-12-23\"), courseStatus: 'Completed', totalLesson: 12, lastLesson: 12, reviewStatus: 'Completed' },\r\n    { id: 4, name: 'B Level 2', branch: 'Branch B', tutor: ['B'], periodStart: moment(\"2020-04-10\"), periodEnd: null, courseStatus: 'Ongoing', totalLesson: 12, lastLesson: 7, reviewStatus: 'Ongoing' },\r\n]\r\n\r\nexport default function Home(props) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const toLessonPage = (courseId, mode) => {\r\n        // history.push(`/course/${courseId}?mode=${mode}`);\r\n        history.push(`/course/${courseId}`);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // axios.get()\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <Card\r\n                        // bg={variant.toLowerCase()}\r\n                        // key={idx}\r\n                        // text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                        // border='primary'\r\n                        // text='light'\r\n                        className='m-3'\r\n                    >\r\n                        {/* <Card.Header as=\"h5\"><Badge variant=\"primary\">Regular Course</Badge></Card.Header> */}\r\n                        <Card.Body>\r\n                            <Card.Title><Badge variant=\"primary\">Regular Course</Badge></Card.Title>\r\n                            <Table striped hover borderless responsive=\"xl\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr\r\n                                    // className='table-primary'\r\n                                    >\r\n                                        <th style={{ width: \"30%\" }}>Name</th>\r\n                                        <th style={{ width: \"15%\" }}>Period</th>\r\n                                        <th style={{ width: \"10%\" }}>Branch</th>\r\n                                        <th style={{ width: \"25%\" }}>Lesson</th>\r\n                                        <th style={{ width: \"10%\" }}>Course Status</th>\r\n                                        <th style={{ width: \"10%\" }}>Review Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        regularCourseList.map((e, i) => (\r\n                                            <tr style={{ cursor: 'pointer' }} key={i} onClick={() => toLessonPage(e.id, 'assessment')}>\r\n                                                <td>{e.name}</td>\r\n                                                <td>{e.periodStart.format(\"YYYY-MM-DD\")} ~ {e.periodEnd !== null ? e.periodEnd.format(\"YYYY-MM-DD\") : 'Now'}</td>\r\n                                                <td>{e.branch}</td>\r\n                                                <td>\r\n                                                    <ProgressBar\r\n                                                        // label={`${e.lastLesson}/${e.totalLesson}`}\r\n                                                        label={e.lastLesson}\r\n                                                        // variant={e.courseStatus === 'Completed' ? 'success' : 'primary'}\r\n                                                        variant={e.courseStatus === 'Completed' ? 'success' : e.courseStatus === 'Cancelled' ? 'danger' : 'primary'}\r\n                                                        now={e.courseStatus === 'Cancelled' ? e.totalLesson : Math.round(e.lastLesson / e.totalLesson * 100)}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{e.courseStatus}</td>\r\n                                                <td>{e.reviewStatus}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card\r\n                        // bg={variant.toLowerCase()}\r\n                        // key={idx}\r\n                        // text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                        // border='primary'\r\n                        // text='light'\r\n                        className='m-3'\r\n                    >\r\n                        {/* <Card.Header as=\"h5\"><Badge variant=\"primary\">Regular Course</Badge></Card.Header> */}\r\n                        <Card.Body>\r\n                            <Card.Title><Badge variant=\"warning\">Summer Camp</Badge></Card.Title>\r\n                            <Table striped hover borderless responsive=\"xl\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr\r\n                                    // className='table-primary'\r\n                                    >\r\n                                        <th style={{ width: \"30%\" }}>Name</th>\r\n                                        <th style={{ width: \"15%\" }}>Period</th>\r\n                                        <th style={{ width: \"10%\" }}>Branch</th>\r\n                                        <th style={{ width: \"25%\" }}>Lesson</th>\r\n                                        <th style={{ width: \"10%\" }}>Course Status</th>\r\n                                        <th style={{ width: \"10%\" }}>Review Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        summerCampList.map((e, i) => (\r\n                                            <tr style={{ cursor: 'pointer' }} key={i} onClick={() => toLessonPage(e.id, 'assessment')}>\r\n                                                <td>{e.name}</td>\r\n                                                <td>{e.periodStart.format(\"YYYY-MM-DD\")} ~ {e.periodEnd !== null ? e.periodEnd.format(\"YYYY-MM-DD\") : 'Now'}</td>\r\n                                                <td>{e.branch}</td>\r\n                                                <td>\r\n                                                    <ProgressBar\r\n                                                        // label={`${e.lastLesson}/${e.totalLesson}`}\r\n                                                        label={e.lastLesson}\r\n                                                        // variant={e.courseStatus === 'Completed' ? 'success' : 'primary'}\r\n                                                        variant={e.courseStatus === 'Completed' ? 'success' : e.courseStatus === 'Cancelled' ? 'danger' : 'primary'}\r\n                                                        now={e.courseStatus === 'Cancelled' ? e.totalLesson : Math.round(e.lastLesson / e.totalLesson * 100)}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{e.courseStatus}</td>\r\n                                                <td>{e.reviewStatus}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card\r\n                        // bg={variant.toLowerCase()}\r\n                        // key={idx}\r\n                        // text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                        // border='primary'\r\n                        // text='light'\r\n                        className='m-3'\r\n                    >\r\n                        {/* <Card.Header as=\"h5\"><Badge variant=\"primary\">Regular Course</Badge></Card.Header> */}\r\n                        <Card.Body>\r\n                            <Card.Title><Badge variant=\"info\">Make-up Lesson</Badge></Card.Title>\r\n                            N/A\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card\r\n                        // bg={variant.toLowerCase()}\r\n                        // key={idx}\r\n                        // text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                        // border='primary'\r\n                        // text='light'\r\n                        className='m-3'\r\n                    >\r\n                        {/* <Card.Header as=\"h5\"><Badge variant=\"primary\">Regular Course</Badge></Card.Header> */}\r\n                        <Card.Body>\r\n                            <Card.Title><Badge variant=\"indigo\">Review Class</Badge></Card.Title>\r\n                            <Table striped hover borderless responsive=\"xl\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr\r\n                                    // className='table-primary'\r\n                                    >\r\n                                        <th style={{ width: \"30%\" }}>Name</th>\r\n                                        <th style={{ width: \"15%\" }}>Period</th>\r\n                                        <th style={{ width: \"10%\" }}>Branch</th>\r\n                                        <th style={{ width: \"25%\" }}>Lesson</th>\r\n                                        <th style={{ width: \"10%\" }}>Course Status</th>\r\n                                        <th style={{ width: \"10%\" }}>Review Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        reviewCourseList.map((e, i) => (\r\n                                            <tr style={{ cursor: 'pointer' }} key={i} onClick={() => toLessonPage(e.id, 'review')}>\r\n                                                <td>{e.name}</td>\r\n                                                <td>{e.periodStart.format(\"YYYY-MM-DD\")} ~ {e.periodEnd !== null ? e.periodEnd.format(\"YYYY-MM-DD\") : 'Now'}</td>\r\n                                                <td>{e.branch}</td>\r\n                                                <td>\r\n                                                    <ProgressBar\r\n                                                        // label={`${e.lastLesson}/${e.totalLesson}`}\r\n                                                        label={e.lastLesson}\r\n                                                        // variant={e.courseStatus === 'Completed' ? 'success' : 'primary'}\r\n                                                        variant={e.courseStatus === 'Completed' ? 'success' : e.courseStatus === 'Cancelled' ? 'danger' : 'primary'}\r\n                                                        now={e.courseStatus === 'Cancelled' ? e.totalLesson : Math.round(e.lastLesson / e.totalLesson * 100)}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{e.courseStatus}</td>\r\n                                                <td>{e.reviewStatus}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment >\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\nimport { Switch, Route, useHistory, Link, NavLink } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar as faSolidStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport axios from 'axios'\r\nimport HomeCard from '../HomeCard'\r\nimport moment from 'moment'\r\n\r\n// var Rating = require('react-rating');\r\nimport Rating from 'react-rating';\r\n\r\nconst obj = {\r\n    courseId: 1,\r\n    lessonId: 1,\r\n    lessonNumber: 1,\r\n    lessonName: 'Lesson 1 Intro',\r\n    tutor: [\r\n        '5f75488a8c546616ec59e691'\r\n    ],\r\n    reviewer: [\r\n        '5f7548cd8c546616ec59e692'\r\n    ],\r\n    objectives: [\r\n        { objectiveId: 1, description: 'lesson 1 objective 1' },\r\n        { objectiveId: 2, description: 'lesson 1 objective 2' },\r\n        { objectiveId: 3, description: 'lesson 1 objective 3' }\r\n    ],\r\n    students: [\r\n        { studentId: 1, name: 'Student A' },\r\n        { studentId: 2, name: 'Student B' },\r\n        { studentId: 3, name: 'Student C' },\r\n    ],\r\n    assessments: [\r\n        { assessmentId: 1, studentId: 1, studentName: 'Student A', courseId: 1, lessonId: 1, review: [{ reviewerId: 1, comment: '' }], grading: [{ objectiveId: 1, description: 'lesson 1 objective 1', grade: 5, remarks: '' }, { objectiveId: 2, description: 'lesson 1 objective 2', grade: 3, remarks: '' }, { objectiveId: 3, description: 'lesson 1 objective 3', grade: 4, remarks: '' }] },\r\n        { assessmentId: 2, studentId: 2, studentName: 'Student B', courseId: 1, lessonId: 1, review: [{ reviewerId: 1, comment: '' }], grading: [{ objectiveId: 1, description: 'lesson 1 objective 1', grade: 5, remarks: '' }, { objectiveId: 2, description: 'lesson 1 objective 2', grade: 4, remarks: '' }, { objectiveId: 3, description: 'lesson 1 objective 3', grade: 3, remarks: '' }] },\r\n        { assessmentId: 3, studentId: 3, studentName: 'Student C', courseId: 1, lessonId: 1, review: [{ reviewerId: 1, comment: '' }], grading: [{ objectiveId: 1, description: 'lesson 1 objective 1', grade: 5, remarks: '' }, { objectiveId: 2, description: 'lesson 1 objective 2', grade: 3, remarks: '' }, { objectiveId: 3, description: 'lesson 1 objective 3', grade: 3, remarks: '' }] }\r\n    ],\r\n}\r\n\r\nconst obj2 = {\r\n    courseId: 1,\r\n    lessonId: 2,\r\n    lessonNumber: 2,\r\n    lessonName: 'Lesson 2 Hands-on Coding',\r\n    tutor: [\r\n        '5f75488a8c546616ec59e691'\r\n    ],\r\n    reviewer: [\r\n        '5f7548cd8c546616ec59e692'\r\n    ],\r\n    objectives: [\r\n        { objectiveId: 4, description: 'Recap on lesson 1' },\r\n        { objectiveId: 5, description: 'Hello World' },\r\n        { objectiveId: 6, description: 'Advance Hello World' }\r\n    ],\r\n    students: [\r\n        { studentId: 1, name: 'Student A' },\r\n        { studentId: 2, name: 'Student B' },\r\n        { studentId: 3, name: 'Student C' },\r\n    ],\r\n    assessments: [\r\n        { assessmentId: 4, studentId: 1, studentName: 'Student A', courseId: 1, lessonId: 2, review: [{ reviewerId: 1, comment: 'make-up lesson?' }], grading: [{ objectiveId: 4, description: 'Recap on lesson 1', grade: 1, remarks: 'Forget lesson 1 content' }, { objectiveId: 5, description: 'Hello World', grade: 0, remarks: '' }, { objectiveId: 6, description: 'Advance Hello World', grade: 0, remarks: '' }] },\r\n        { assessmentId: 5, studentId: 2, studentName: 'Student B', courseId: 1, lessonId: 2, review: [{ reviewerId: 1, comment: '' }], grading: [{ objectiveId: 4, description: 'Recap on lesson 1', grade: 5, remarks: '' }, { objectiveId: 5, description: 'Hello World', grade: 5, remarks: '' }, { objectiveId: 6, description: 'Advance Hello World', grade: 3, remarks: 'abcdefg' }] },\r\n        { assessmentId: 6, studentId: 3, studentName: 'Student C', courseId: 1, lessonId: 2, review: [{ reviewerId: 1, comment: '' }], grading: [{ objectiveId: 4, description: 'Recap on lesson 1', grade: 5, remarks: '' }, { objectiveId: 5, description: 'Hello World', grade: 5, remarks: '' }, { objectiveId: 6, description: 'Advance Hello World', grade: 4, remarks: '' }] }\r\n    ],\r\n}\r\n\r\n// const alist = [obj, obj2]\r\n\r\nexport default function Course(props) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [alist, setAlist] = React.useState([obj, obj2]);\r\n    const [submitStatus, setSubmitStatus] = React.useState({});\r\n\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    React.useEffect(() => {\r\n        // axios.get()\r\n    }, [])\r\n\r\n    const updateAlist = (e, lessonIdx, assessmentIdx, idx, attr) => {\r\n        // let tempObj = alist[lessonIdx];\r\n        // if (attr === 'rate') {\r\n        //     tempObj.assessments[assessmentIdx].grading[idx][attr] = e;\r\n        // } else {\r\n        //     tempObj.assessments[assessmentIdx].grading[idx][attr] = e.target.value;\r\n        // }\r\n        // setAlist(alist.splice(lessonIdx, 1));\r\n        // setAlist([...alist, tempObj])\r\n\r\n        // if (attr === 'rate') {\r\n        //     setAlist(alist.map((ele, i) => (i === lessonIdx ? ele.assessments[assessmentIdx].grading[idx][attr] = e : ele)))\r\n        // } else {\r\n        //     setAlist(alist.map((ele, i) => (i === lessonIdx ? ele.assessments[assessmentIdx].grading[idx][attr] = e.target.value : ele)))\r\n        // }\r\n        // let templist = alist.map((ele, i) => {\r\n        //     if (i === lessonIdx) {\r\n        //         if (attr === 'grade') {\r\n        //             ele.assessments[assessmentIdx].grading[idx][attr] = e;\r\n        //         } else {\r\n        //             ele.assessments[assessmentIdx].grading[idx][attr] = e.target.value;\r\n        //         }\r\n        //     }\r\n        //     return ele\r\n        // })\r\n        // console.log(templist)\r\n        setAlist(\r\n            alist.map((ele, i) => {\r\n                if (i === lessonIdx) {\r\n                    if (attr === 'grade') {\r\n                        ele.assessments[assessmentIdx].grading[idx][attr] = e;\r\n                    } else if (attr === 'review') {\r\n                        ele.assessments[assessmentIdx].review[0].comment = e.target.value;\r\n                    } else {\r\n                        ele.assessments[assessmentIdx].grading[idx][attr] = e.target.value;\r\n                    }\r\n                }\r\n                return ele\r\n            })\r\n        )\r\n        setSubmitStatus(submitStatus => ({\r\n            ...submitStatus,\r\n            [lessonIdx]: true\r\n        }))\r\n    }\r\n\r\n    const submitForm = (lessonIdx) => {\r\n        console.log('submit form')\r\n        setSubmitStatus(submitStatus => ({\r\n            ...submitStatus,\r\n            [lessonIdx]: false\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {alist.map((lesson, lessonIdx) => (\r\n                <Row key={lessonIdx}>\r\n                    <Col>\r\n                        <Card className='m-3'>\r\n                            <Card.Header as=\"h5\">{lesson.lessonName}</Card.Header>\r\n                            <Card.Body>\r\n                                <Tabs defaultActiveKey={0} style={{ borderBottom: '1px #eee solid' }} className='my-3'>\r\n                                    {lesson.assessments.map((assessment, assessmentIdx) => (\r\n                                        <Tab eventKey={assessmentIdx} title={assessment.studentName} key={assessmentIdx} className='my-3 mx-1'>\r\n                                            <Form>\r\n                                                {assessment.grading.map((item, idx) => (\r\n                                                    <React.Fragment key={idx}>\r\n                                                        <Form.Group as={Row} style={{ borderBottom: '1px #eee solid' }} className='p-3' >\r\n                                                            <Form.Label column sm={5}>\r\n                                                                {item.description}\r\n                                                            </Form.Label>\r\n                                                            <Col sm={3}>\r\n                                                                <Rating initialRating={item.grade} emptySymbol={<FontAwesomeIcon icon={faStar} color=\"#e6e600\" />} fullSymbol={<FontAwesomeIcon icon={faSolidStar} color=\"#e6e600\" />} onChange={(rate) => updateAlist(rate, lessonIdx, assessmentIdx, idx, 'grade')} />\r\n                                                            </Col>\r\n                                                            <Col sm={4}>\r\n                                                                <Form.Control type=\"text\" placeholder=\"remarks\" as='textarea' readOnly={lesson.tutor.includes(auth.user._id) ? false : true} value={item.remarks} onChange={(e) => updateAlist(e, lessonIdx, assessmentIdx, idx, 'remarks')} />\r\n                                                            </Col>\r\n                                                        </Form.Group>\r\n                                                    </React.Fragment>\r\n                                                ))}\r\n                                                <Form.Group as={Row} className='p-3' >\r\n                                                    <Col sm={12}>\r\n                                                        <Form.Control type=\"text\" placeholder=\"remarks\" as='textarea' readOnly={lesson.reviewer.includes(auth.user._id) ? false : true} value={assessment.review[0].comment === '' ? 'No comment on review' : assessment.review[0].comment} onChange={(e) => updateAlist(e, lessonIdx, assessmentIdx, null, 'review')} />\r\n                                                    </Col>\r\n                                                </Form.Group>\r\n                                                <Button\r\n                                                    variant=\"success\"\r\n                                                    //  type=\"submit\"\r\n                                                    disabled={submitStatus.hasOwnProperty(lessonIdx) ? submitStatus[lessonIdx] === true ? false : true : true}\r\n                                                    onClick={() => submitForm(lessonIdx)}\r\n                                                >\r\n                                                    {/* submitStatus.hasOwnProperty(lessonIdx) ? submitStatus[lessonIdx] === true ? 'Update & Save' : 'No change detected' : 'No change detected' */}\r\n                                                    Update &amp; Save\r\n                                                </Button>\r\n                                            </Form>\r\n                                        </Tab>\r\n                                    ))}\r\n                                </Tabs>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            ))}\r\n        </React.Fragment >\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            // console.log(auth);\r\n            if (auth.isLoading) {\r\n                // return <h2>Loading...</h2>;\r\n                return (\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                );\r\n            } else if (!auth.isAuthenticated) {\r\n                return <Redirect to=\"/signin\" />;\r\n            } else {\r\n                return <Component {...props} />;\r\n            }\r\n        }}\r\n    />\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport './App.css';\n\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nimport { Provider, useDispatch } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from './actions/authActions';\n\nimport Container from 'react-bootstrap/Container';\n\nimport TopNavbar from './components/TopNavbar';\nimport Signin from './components/page/Signin';\nimport SyllabusPlanning from './components/page/SyllabusPlanning';\nimport Course from './components/page/Course';\n\nimport PrivateRoute from './components/common/PrivateRoute';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Wrapper />\n    </Provider>\n  );\n}\n\nfunction Wrapper() {\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(loadUser());\n  }, [])\n\n  return (\n    <HashRouter basename='/'>\n      <TopNavbar />\n      <Container fluid>\n        <Switch>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <PrivateRoute exact path=\"/\" component={SyllabusPlanning} />\n          <PrivateRoute path=\"/course/:id\" component={Course} />\n        </Switch>\n      </Container>\n    </HashRouter>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}